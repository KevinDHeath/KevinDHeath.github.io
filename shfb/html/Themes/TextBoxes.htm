<!DOCTYPE html>
<html lang="en-US">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="shortcut icon" href="../../icons/favicon.ico" />
  <link rel="stylesheet" href="../../css/shfb.css" />
  <script src="../../scripts/jquery-3.5.1.min.js"></script>
  <script src="../../scripts/highlight.min.js"></script>
  <script src="../../scripts/clipboard.min.js"></script>
  <script src="../../scripts/presentationStyle.js"></script>
  <title>TextBox Styles</title>
</head>

<body>
  <div class="fixedLayout">
    <div id="Header" class="fixedHeader">
      <div class="pageHeader level mb-0 has-background-black">
        <div class="level-left">
          <div class="level-item"><img src="../../icons/help.png" style="max-height: 40px" class="py-2 px-2">
            Common Components</div>
        </div>
        <span id="CurrentLanguage"></span>
        <a class="languageFilterItem" data-languageId="cs"></a>
      </div>
    </div>
    <div class="fixedContent">
      <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
        <ul id="TopicBreadcrumbs">
          <li><a href="../../index.html">MVVM WPF</a></li>
          <li><a href="../Components.htm">Components</a></li>
          <li><a href="../Themes.htm">Themes</a></li>
          <li><p class="has-text-grey">TextBoxes</p></li>
        </ul>
      </nav>
      <div id="ContentContainer" class="columns pl-5 pr-5 fixedContent">
        <div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div>
        <div id="TOCColumn" class="column is-hidden-mobile">
          <nav class="toc">
            <ul id="TableOfContents" class="toc-menu">
              <li><a href="Buttons.htm">Buttons</a></li>
              <li><a href="CheckBoxes.htm">CheckBoxes</a></li>
              <li><a href="ComboBoxes.htm">ComboBoxes</a></li>
              <li><a href="DatePickers.htm">DatePickers</a></li>
              <li><a href="ListViews.htm">ListViews</a></li>
              <li><a href="TabControls.htm">TabControls</a></li>
              <li><b><a href="TextBoxes.htm">TextBoxes</a></b></li>
            </ul>
          </nav>
        </div>
        <div id="TopicContent" class="column content is-7">
          <h1>TextBox Styles</h1>
          <div class="summary">
            <p>These styles relate to the Windows Desktop <q>TargetType="{x:Type TextBlock}</q>
              and <q>TargetType="{x:Type TextBox}</q> control classes.</p>
          </div>
          <div>
            <p>Example of adding the resources to an <q>App.xaml</q> file:</p>
            <div class="codeSnippet">
              <div class="codeHeader"><span class="codeHeaderTitle">XAML</span>
                <button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small">
                  <i class="fa fa-copy"></i></span><span>Copy</span></button></div>
              <div class="codePanel hljs">
                <pre xml:space="preserve"><code class="language-xml">&lt;ResourceDictionary&gt;
  &lt;ResourceDictionary.MergedDictionaries&gt;
    &lt;ResourceDictionary Source="pack://application:,,,/Common.Wpf.Resources;component/Themes/TextBox.xaml"/&gt;
  &lt;/ResourceDictionary.MergedDictionaries&gt;
&lt;/ResourceDictionary&gt;</code></pre>
              </div>
            </div>
          </div>
          <h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0">
            <i class="fa fa-angle-down"></i></span>commonErrorItemTemplate</h2>
          <div id="IDCABSection">
            <p>This can be assigned to any control type as the validation error template.<br />
              Example of assigning the template to a custom Date Picker style:</p>
            <div class="codeSnippet">
              <div class="codeHeader"><span class="codeHeaderTitle">XAML</span>
                <button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small">
                  <i class="fa fa-copy"></i></span><span>Copy</span></button></div>
              <div class="codePanel hljs">
                <pre xml:space="preserve"><code class="language-xml">&lt;Style x:Key="datePickerStyle1" TargetType="{x:Type DatePicker}" BasedOn="{StaticResource commonDatePickerStyle}"&gt;
  &lt;Setter Property="Validation.ErrorTemplate" Value="{StaticResource commonErrorItemTemplate}"/&gt;
&lt;/Style&gt;</code></pre>
              </div>
            </div>
            <h3 class="quickLinkHeader">Default properties</h3>
            <div>
              <ul>
                <li><p>FontStyle = "Italic"</p></li>
                <li><p>FontWeight = "Bold"</p></li>
                <li><p>Foreground = "{StaticResource Validation.HasError}"</p></li>
              </ul>
            </div>
            <h3 class="quickLinkHeader">Notes</h3>
            <div>
              <ol>
                <li>
                  <p>Use this template to show 'adornment style' error messages.<br /><span
                    class="mediaInline"><img alt="Adornment Errors" src="../../media/AdornmentErrors.png" /></span></p>
                </li>
                <li>
                  <p>As you can see, the problem with 'adornment style' is that it can
                    overwrite other elements on the form if not enough vertical spacing between the fields
                    is allowed for.</p>
                </li>
              </ol>
            </div>
          </div>
          <h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0">
            <i class="fa fa-angle-down"></i></span>commonErrorTextBlockStyle</h2>
          <div id="IDDABSection">
            <p>Example of assigning the style to a Text Block control:</p>
            <div class="codeSnippet">
              <div class="codeHeader"><span class="codeHeaderTitle">XAML</span>
                <button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small">
                  <i class="fa fa-copy"></i></span><span>Copy</span></button></div>
              <div class="codePanel hljs">
                <pre xml:space="preserve"><code class="language-xml">&lt;Grid x:Name="MainGrid" Validation.ErrorTemplate="{x:Null}"&gt;
  ...
  &lt;StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2"&gt;
    &lt;Separator/&gt;
    &lt;TextBlock x:Name="tbErrorText" Style="{StaticResource commonErrorTextBlockStyle}"
    Text="{Binding Path=(Validation.Errors)[0].ErrorContent, ElementName=MainGrid}"/&gt;
  &lt;/StackPanel&gt;
&lt;/Grid&gt;</code></pre>
              </div>
            </div>
            <h3 class="quickLinkHeader">Default properties</h3>
            <div>
              <ul>
                <li><p>FontStyle = "Italic"</p></li>
                <li><p>FontWeight = "Bold"</p></li>
                <li><p>Foreground = "{StaticResource Validation.HasError}"</p></li>
              </ul>
            </div>
            <h3 class="quickLinkHeader">Notes</h3>
            <div>
              <ol>
                <li>
                  <p>Use this style to show error messages in a single text block instead of using the 'adornment style'.<br /><span
                    class="mediaInline"><img alt="Adornment Errors" src="../../media/SingleErrorBlock.png" /></span></p>
                </li>
                <li>
                  <p>The problem with this style is that it only shows one message at a time. To show all
                    messages use an Items Control with a Scroll Viewer in its template and the Text Block in its
                    Item template.</p>
                </li>
              </ol>
            </div>
          </div>
          <h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0">
            <i class="fa fa-angle-down"></i></span>commonTextBoxEditTemplate</h2>
          <div id="IDEABSection">
            <p>Example of assigning the template to a custom Text Box style:</p>
            <div class="codeSnippet">
              <div class="codeHeader"><span class="codeHeaderTitle">XAML</span>
                <button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small">
                  <i class="fa fa-copy"></i></span><span>Copy</span></button></div>
              <div class="codePanel hljs">
                <pre xml:space="preserve"><code class="language-xml">&lt;Style x:Key="textBoxStyle1" TargetType="{x:Type TextBox}"&gt;
  &lt;Setter Property="Template" Value="{StaticResource commonTextBoxEditTemplate}"/&gt;
&lt;/Style&gt;</code></pre>
              </div>
            </div>
            <h3 class="quickLinkHeader">Notes</h3>
            <div>
              <ul>
                <li><p>Use this template for editable text boxes with rounded corners.</p></li>
              </ul>
            </div>
          </div>
          <h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0">
            <i class="fa fa-angle-down"></i></span>commonTextBoxStyle</h2>
          <div id="IDFABSection">
            <p>Example of assigning the style to a Text Box control:</p>
            <div class="codeSnippet">
              <div class="codeHeader"><span class="codeHeaderTitle">XAML</span>
                <button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small">
                  <i class="fa fa-copy"></i></span><span>Copy</span></button></div>
              <div class="codePanel hljs">
                <pre xml:space="preserve"><code class="language-xml">&lt;TextBox x:Name="tbName" Style="{StaticResource commonTextBoxStyle}"/&gt;</code></pre>
              </div>
            </div>
            <h3 class="quickLinkHeader">Default properties</h3>
            <div>
              <ul>
                <li><p>Template = "{StaticResource commonTextBoxEditTemplate}"</p></li>
                <li><p>Validation.ErrorTemplate = "{x:Null}"</p></li>
              </ul>
            </div>
          </div>
          <h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0">
            <i class="fa fa-angle-down"></i></span>commonTextBoxWithErrorsStyle</h2>
          <div id="IDGABSection">
            <p>Example of assigning the style to a Text Box control:</p>
            <div class="codeSnippet">
              <div class="codeHeader"><span class="codeHeaderTitle">XAML</span>
                <button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small">
                  <i class="fa fa-copy"></i></span><span>Copy</span></button></div>
              <div class="codePanel hljs">
                <pre xml:space="preserve"><code class="language-xml">&lt;TextBox x:Name="tbName" Style="{StaticResource commonTextBoxWithErrorsStyle}"/&gt;</code></pre>
              </div>
            </div>
            <h3 class="quickLinkHeader">Default properties</h3>
            <div>
              <ul>
                <li><p>Template = "{StaticResource commonTextBoxWithErrorsTemplate}"</p></li>
                <li><p>Validation.ErrorTemplate = "StaticResource commonErrorItemTemplate"</p></li>
              </ul>
            </div>
            <h3 class="quickLinkHeader">Notes</h3>
            <div>
              <ol>
                <li>
                  <p>Use this style to show error messages in a text block attached to the text box.
                    This allows for fields to automatically adjust their position on the form:<br /><span
                      class="mediaInline"><img alt="With Errors Style" src="../../media/WithErrorsStyle.png" /></span></p>
                </li>
                <li>
                  <p>To allow the whole form <em>(i.e., Window)</em> to
                    adjust its size, the property SizeToContent="Height" must be set.</p>
                </li>
              </ol>
            </div>
          </div>
          <h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0">
            <i class="fa fa-angle-down"></i></span>See Also</h2>
          <div id="seeAlsoSection">
            <h4>Other Resources</h4>
            <div><a href="https://learn.microsoft.com/en-us/dotnet/api/system.windows.controls.textblock"
                target="_blank" rel="noopener noreferrer">Windows Desktop TextBlock Class</a></div>
            <div><a href="https://learn.microsoft.com/en-us/dotnet/api/system.windows.controls.textbox" target="_blank"
                rel="noopener noreferrer">Windows Desktop TextBox Class</a></div>
          </div>
        </div>
        <div id="InThisArticleColumn" class="column pt-2 is-hidden-mobile">
          <nav class="card sticky is-hidden">
            <header class="card-header">
              <p class="card-header-title has-text-white">In this article</p>
            </header>
            <ul id="InThisArticleMenu" class="menu-list article-item pt-2 pb-2">
              <li><a class="quickLink">commonErrorItemTemplate</a></li>
              <li><a class="quickLink pl-5">Default properties</a></li>
              <li><a class="quickLink pl-5">Notes</a></li>
              <li><a class="quickLink">commonErrorTextBlockStyle</a></li>
              <li><a class="quickLink pl-5">Default properties</a></li>
              <li><a class="quickLink pl-5">Notes</a></li>
              <li><a class="quickLink">commonTextBoxEditTemplate</a></li>
              <li><a class="quickLink pl-5">Notes</a></li>
              <li><a class="quickLink">commonTextBoxStyle</a></li>
              <li><a class="quickLink pl-5">Default properties</a></li>
              <li><a class="quickLink">commonTextBoxWithErrorsStyle</a></li>
              <li><a class="quickLink pl-5">Default properties</a></li>
              <li><a class="quickLink pl-5">Notes</a></li>
              <li><a class="quickLink">See Also</a></li>
            </ul>
          </nav>
        </div>
      </div>
    </div>
    <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
      <div class="columns">
        <div class="column"></div>
        <div class="column"></div>
      </div>
    </footer>
  </div>
  <script>$(function () {
    SetDefaultLanguage("cs");
    LoadTocFile(null, null);
    InitializeQuickLinks();
    $(".toggleSection").click(function () {
      SectionExpandCollapse(this);
    });
    $(".toggleSection").keypress(function () {
      SectionExpandCollapseCheckKey(this, event)
    });
    hljs.highlightAll();
  });</script>
</body>

</html>