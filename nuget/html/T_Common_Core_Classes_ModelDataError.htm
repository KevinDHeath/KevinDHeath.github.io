<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ModelDataError Class</title><meta name="Title" content="ModelDataError" /><meta name="Help.Id" content="T:Common.Core.Classes.ModelDataError" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Common.Core.Classes" /><meta name="guid" content="T_Common_Core_Classes_ModelDataError" /><meta name="Description" content="Base class for models that required the INotifyDataErrorInfo and INotifyPropertyChanged interfaces." /><meta name="tocFile" content="../toc/IDBA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">.NET Helper Packages</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Model<wbr />Data<wbr />Error Class</h1><div class="summary">Base class for models that required the INotifyDataErrorInfo and
             INotifyPropertyChanged interfaces.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Common_Core_Classes.htm">Common.Core.Classes</a><br /><strong>Assembly:</strong> Common.Core (in Common.Core.dll) Version: 2.1.2<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ModelDataError</span> : <span class="identifier">ModelBase</span>, 
	<span class="identifier">INotifyDataErrorInfo</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="T_Common_Core_Classes_ModelBase.htm">ModelBase</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">ModelDataError</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifydataerrorinfo" target="_blank" rel="noopener noreferrer">INotifyDataErrorInfo</a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection">It's base class is <a href="T_Common_Core_Classes_ModelBase.htm">ModelBase</a> so that functionality is included.<br />
             It can be used as a base class, or as an instance variable.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection">
             In a class using it as a base class, the protected constructor will be used:
             <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-C#">using System.ComponentModel.DataAnnotations;
using Common.Core.Classes;

public class TestModel : ModelDataError
{
    public bool IsValid =&gt; !HasErrors;

    private string? _name;
    [Display( Name = "Full Name" )]
    [Required( ErrorMessage = "Name cannot be empty." )]
    public string Name
    {
        get =&gt; ( _name is not null ) ? _name : string.Empty;
        set
        {
            if( value.Equals( _name ) ) return;

            name = value;
            ValidateProperty( value );
            OnPropertyChanged();
        }
    }

    public TestModel()
    { }
}</code></pre></div></div>
             In a class using it as an instance variable, the public constructor must be used.
             <br />The INotifyDataErrorInfo interface must be implemented and the event handler needs to
             subscribe to the core error version so that the ErrorsChanged event is seen as being used:
             <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-C#">using System.Collections;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using Common.Core.Classes;

public class TestModel : INotifyDataErrorInfo
{
    public bool IsValid =&gt; !_validator.HasErrors;

    private string? _name;
    [Display( Name = "Full Name" )]
    [Required( ErrorMessage = "Name cannot be empty." )]
    public string Name
    {
        get =&gt; ( _name is not null ) ? _name : string.Empty;
        set
        {
            if( value.Equals( _name ) ) return;
            name = value;
            _validator.ValidateProperty( value );
            OnPropertyChanged();
        }
    }

    private readonly ModelDataError _validator;

    public TestModel()
    {
        // Do this before anything else
        _validator = new ModelDataError( this );
        _validator.ErrorsChanged += Core_ErrorsChanged;
    }

    public bool HasErrors =&gt; _validator.HasErrors;

    public IEnumerable GetErrors( string? propertyName )
    {
        return _validator.GetErrors( propertyName );
    }

    public event EventHandler&lt;DataErrorsChangedEventArgs&gt;? ErrorsChanged;

    private void Core_ErrorsChanged( object? sender, DataErrorsChangedEventArgs e )
    {
        ErrorsChanged?.Invoke( this, e );
    }
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDABFASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_Common_Core_Classes_ModelDataError__ctor.htm">ModelDataError<span id="LST63037118_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>Initializes a new instance of the ModelDataError class.</td></tr><tr><td><a href="M_Common_Core_Classes_ModelDataError__ctor_1.htm">ModelDataError(Object)</a></td><td>Initializes a new instance of the ModelDataError class.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDGFASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_Common_Core_Classes_ModelDataError_HasErrors.htm">HasErrors</a></td><td>Gets a value that indicates whether the entity has validation errors.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDCFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Common_Core_Classes_ModelDataError_ClearErrors.htm">ClearErrors</a></td><td>Clears the validation errors for a specified property or for the entire entity.</td></tr><tr><td><a href="M_Common_Core_Classes_ModelDataError_GetErrors.htm">GetErrors</a></td><td>Gets the validation errors for a specified property or for the entire entity.</td></tr><tr><td><a href="M_Common_Core_Classes_ModelDataError_ValidateAllProperties.htm">ValidateAllProperties</a></td><td>Validates all the properties in the current instance.</td></tr><tr><td><a href="M_Common_Core_Classes_ModelDataError_ValidateProperty.htm">ValidateProperty</a></td><td>Validates a property with a specified name and a given input value.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Events</h2><div id="IDAFASection"><table id="EventList" class="table is-hoverable"><tr><td><a href="E_Common_Core_Classes_ModelDataError_ErrorsChanged.htm">ErrorsChanged</a></td><td>Occurs when the validation errors have changed for a property or for the entire entity.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Common_Core_Classes.htm">Common.Core.Classes Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Events</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>